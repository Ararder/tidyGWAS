% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbsnp.R
\name{verify_chr_pos_rsid}
\alias{verify_chr_pos_rsid}
\title{Compare CHR, POS and RSID with dbSNP reference data}
\usage{
verify_chr_pos_rsid(
  tbl,
  build = c("NA", "37", "38"),
  dbsnp_path,
  add_missing_build = TRUE
)
}
\arguments{
\item{tbl}{a \code{\link[dplyr:reexports]{dplyr::tibble()}}, formated with \code{\link[=tidyGWAS_columns]{tidyGWAS_columns()}}}

\item{build}{Can be used to skip \code{\link[=infer_build]{infer_build()}}}

\item{dbsnp_path}{filepath to the dbSNP155 directory (untarred dbSNP155.tar)}

\item{add_missing_build}{Should the build which the sumstats are NOT on also be added in?}
}
\value{
a \code{\link[dplyr:reexports]{dplyr::tibble()}} with columns \code{CHR}, \code{POS}, \code{POS_37} and \code{CHR_37} added
}
\description{
verify_chr_pos_rsid compares CHR, POS and RSID with dbSNP reference data. CHR:POS
is used to map to dbSNP reference data. If no mapping is found,
the variable \code{no_dbsnp_entry} is set to \code{TRUE}.
If a mapping is found, the variable \code{no_dbsnp_entry} is set to \code{FALSE}. For
rows where a mapping was found, a flag named \code{incompat_alleles} is set to \code{TRUE}
if alleles are not compatible with reference and alt alleles in dbSNP.
}
\examples{
\dontrun{
gwas <- tidyGWAS::test_file
# make_callback can be passed a filepath to write out removed rows to.
callback <- make_callback("~/output_folder/verify_chr_pos_rsid_removed_rows.tsv")
verify_chr_pos_rsid(gwas, bs, build = 37)
}
}
